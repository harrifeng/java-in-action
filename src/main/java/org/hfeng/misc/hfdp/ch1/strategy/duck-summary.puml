@startuml
namespace Client{
abstract class Duck {
  FlyBehavior flyBehavior
  QuackBehavior quackBehavior
  swim()
  display()
  performQuack()
  performFly()
  setFlyBehavior()
  setQuackBehavior()
}

class MallardDuck extends Duck{
  display()
}

class RedheadDuck extends Duck {
  display()
}

class RubberDuck extends Duck {
  display()
}

class DecoyDuck extends Duck {
  display()
}

Duck o--right .FlyBehavior.FlyBehavior
Duck o--right .QuackBehavior.QuackBehavior
}

namespace FlyBehavior {
interface FlyBehavior {
  fly()
}
class FlyWithWings implements FlyBehavior {
  fly()
}
class FlyNoWay implements FlyBehavior {
  fly()
}
}

namespace QuackBehavior {
interface QuackBehavior{
  quack()
}
class Quack implements QuackBehavior{
  quack()
}
class Squeak implements QuackBehavior{
  quack()
}
class MuteQuack implements QuackBehavior{
  quack()
}
}

@enduml